#+TITLE: My Dev Log
#+date: 2024-05-21 11:58  
#+REVERSE_DATETREE_DATE_FORMAT: %Y-%m-%d %A
#+REVERSE_DATETREE_MONTH_FORMAT: %Y-%m %B
#+REVERSE_DATETREE_YEAR_FORMAT: %Y
#+REVERSE_DATETREE_USE_WEEK_TREE: nil
#+STARTUP: content
#+STARTUP: latexpreview
#+OPTIONS: broken-links:t
#+OPTIONS: toc:3
#+OPTIONS: num:0
#+EXPORT_FILE_NAME: index.html
#+HTML_HEAD: <link rel="stylesheet" href="main.css" type="text/css"/>


* About 

Source Repo -> https://github.com/utsavdarlami/dlog

log to track my dev journey

#+begin_src python :results output :exports both 
print("hello world")
#+end_src

#+RESULTS:
: hello world

* 2024
:PROPERTIES:
:ID:       FA0EB693-A451-4F5D-A449-8061DA49EC5C
:END:

** 2024-10 October

*** 2024-10-10 Thursday

**** 08:17 AM
:LOGBOOK:
CLOCK: [2024-10-10 Thu 08:17]--[2024-10-10 Thu 08:41] =>  0:24
:END:

***** writing my own pre-commit hook

I created a pre-commit hook that automatically exports my journal Org file to HTML whenever I make a new commit to this dev journal repo. Previously, I often forgot to perform this export manually, which is what you are currently reading.

Purpose of the Hook:

- The pre-commit hook ensures that the latest changes in log.org are reflected in an HTML file, eliminating the manual process.

Here is simple script that i needed to run every time a new changes was about to be committed

#+BEGIN_SRC
# Run the org to HTML conversion command
emacsclient -e '(progn (find-file "log.org") (org-html-export-to-html) (bury-buffer))'
#+END_SRC

This sounds like pre-commit hook right? So i ended up setting my own pre-commit hook following the resources

- https://www.youtube.com/watch?v=ObksvAZyWdo
- https://medium.com/@shimo164/custom-python-shell-script-for-pre-commit-700f464bfd63

I am using [[https://pre-commit.com/#intro][pre-commit]] to set up the follow, which might have been a overkill. You can also modify the ~hooks~ provided inside the ~.git/hooks~. Above resources covers it.

Setting up ~.pre-commit-config.yaml~ to run the hook script

#+BEGIN_SRC
repos:
- repo: local
  hooks:
    - id: org-to-html
      name: Org File To HTML
      description: This hook converts org file to html
      entry: org_to_html.sh
      language: script
      files: 'log.org'
#+END_SRC

Here the ~entry~ points to the main script that we want to run when we make the commit. More on here https://pre-commit.com/#new-hooks

Lets look at the final hook script 

#+BEGIN_SRC
# org_to_html.sh
#!/bin/bash

# Get the list of modified files in the commit
modified_files=$(git diff --cached --name-only)

# Check if log.org is modified and index.html is NOT modified
if echo "$modified_files" | grep -q "log.org" && ! echo "$modified_files" | grep -q "index.html"; then
    echo "Running org to HTML export for log.org..."

    # Run the org to HTML conversion command
    emacsclient -e '(progn (find-file "log.org") (org-html-export-to-html) (bury-buffer))'
else
    echo "Skipping org to HTML export. Either log.org is not modified or index.html is modified."
fi
#+END_SRC

Complete Code
- https://github.com/utsavdarlami/dlog


*** 2024-10-09 Wednesday

**** 10:35 AM
:LOGBOOK:
CLOCK: [2024-10-09 Wed 10:35]--[2024-10-09 Wed 10:37] =>  0:02
:END:

howdy! being a long-time. will try to resume this
meaning while here what i made with while playing \w `NotebookLM`

- https://www.youtube.com/watch?v=KT4XZGJSgcU

** 2024-08 August

*** 2024-08-03 Saturday

**** 07:24 PM - Log:
:LOGBOOK:
CLOCK: [2024-08-03 Sat 19:24]--[2024-08-03 Sat 19:27] =>  0:03
:END:

how to set a type-hint for sub-classes in python

- https://stackoverflow.com/questions/46092104/subclass-in-type-hinting

my use-case

#+begin_src python

  from typing import Dict, Type

  class Operator:

      @abstractmethod
      def operate():
          raise NotImplementedError

  class Add(Operator):
      def operate():
          return +

  class Minus(Operator):
      def operate():
          return -

   # Dictionary \w the Operator's child as value
   operator_factory: Dict[str, Type[Operator]] = {
       "add": Add,
       "minus": Minus
   }

#+end_src

** 2024-07 July
:PROPERTIES:
:ID:       957DEC6C-670A-4077-9EA7-45D1D8E8E586
:END:

*** 2024-07-06 Saturday

**** 09:42 AM - Log:
:LOGBOOK:
CLOCK: [2024-07-06 Sat 09:42]--[2024-07-06 Sat 09:47] =>  0:05
:END:


Faced an ~JsonDecodingError~ error while trying to convert llm reponse to json object in python.

Decoding JSON String When There are Single Quotes:
 - https://www.datasciencebyexample.com/2023/03/16/what-to-do-when-single-quotes-in-json-string

**** 09:50 AM - Log:
:LOGBOOK:
CLOCK: [2024-07-06 Sat 09:50]--[2024-07-06 Sat 09:54] =>  0:04
:END:

why use ~functools.wraps~?
- https://suyogdahal.com.np/posts/how-decorator-crashed-my-flask-app/
#+BEGIN_QUOTE
~functools.wrap~ ensures that the decorated function retains the original functionâ€™s signature, documentation, and other attributes.
#+END_QUOTE

** 2024-06 June
:PROPERTIES:
:ID:       DEDBD5FD-A0E6-425B-AB28-D526CEBDCFB7
:END:
*** 2024-06-28 Friday

**** 09:48 PM - Log:
:LOGBOOK:
CLOCK: [2024-06-28 Fri 21:48]--[2024-06-28 Fri 21:50] =>  0:02
:END:

trying to have reverse datetree for this dev-log (feedback from [[https://asubedi.com.np/][ashish subedi]])
- Latest log at top instead in bottom

This should be handled in the org-mode capture itself.
Found one packages that does it
- https://github.com/akirak/org-reverse-datetree/tree/3ac9b35ebe872f5a619f2e6abe281df66ebbcfe0
  - How to use it? -> https://out-of-cheese-error.netlify.app/spacemacs-config#org2878c61
 

*** 2024-06-26 Wednesday

**** 11:03 AM - Log:
:LOGBOOK:
CLOCK: [2024-06-26 Wed 11:03]--[2024-06-26 Wed 11:04] =>  0:01
:END:

Running gunicorn to support ~n~ workers and ~y~ thread, and Why?
- Increasing the server's throughput
- https://stackoverflow.com/questions/38425620/gunicorn-workers-and-threads
  
*** 2024-06-24 Monday

**** 05:11 PM - Log:
:LOGBOOK:
CLOCK: [2024-06-24 Mon 17:11]--[2024-06-24 Mon 17:12] =>  0:01
:END:

***** you can only cook what's in the fridge // reasons to read

- https://www.youtube.com/watch?v=S0krJtb8vxI

Book reco from above
- 1984 by George Orwell: https://www.thriftbooks.com/w/ninetee...
- Cycling Home From Siberia: https://www.thriftbooks.com/w/cycling...
- Wind, Sand, and Stars by Antoine de St. Exupery: https://www.thriftbooks.com/w/wind-sa...
- Flight to Arras by Antoine de St. Exupery: https://www.thriftbooks.com/w/pilote-...
- The Little Prince by Antoine de St. Exupery: https://www.thriftbooks.com/w/the-lit...
- The Complete Tales of Winnie the Pooh by A.A. Milne: https://www.thriftbooks.com/w/the-com...

These links are to new copies:

- Steal Like An Artist by Austin Kleon: https://austinkleon.com/steal/
- Keep Going by Austin Kleon: https://austinkleon.com/keepgoing/
- Show Your Work by Austin Kleon: https://austinkleon.com/show-your-work/

*** 2024-06-22 Saturday

**** 10:01 PM - Log:
:LOGBOOK:
CLOCK: [2024-06-22 Sat 22:01]--[2024-06-22 Sat 22:05] =>  0:04
:END:

Was thinking about writing my own editor. Why you ask?
- A fun and challenging project to work on

I could write it down in python with help of blogs and videos. But i also want to learn new language so maybe i can try in rust.

Found this good blogs on writing your or TUI based editor in C.
- https://viewsourcecode.org/snaptoken/kilo/index.html
And of course everything that is in C has a version in rust.
- https://www.flenker.blog/hecto/ [this is what i am planning to follow]

Both seem to be great work.

*** 2024-06-20 Thursday

**** 09:26 PM - Log:
:LOGBOOK:
CLOCK: [2024-06-20 Thu 21:26]--[2024-06-20 Thu 21:31] =>  0:05
:END:

https://www.mikesteder.com/engineering/management/gifs/software/illustrated/2014/12/31/software-engineering-illustrated-im-just-trying-to-change-this-lightbulb.html
- Good read about technical debt. Revisiting this and still things relatable (now even more).

